// Generated by CoffeeScript 1.7.1
(function() {
  var help, nopt, server, utils, _;


  // This function only been used for one of the Guide
  exports.guidePartOne = function() {
      var express = require('express');

  // create a new express server
      var app = express();

  // serve the files out of ./public as our main files
      app.use(express.static(__dirname + '/../www'));

  // get the app environment from Cloud Foundry

    var port = process.env.VCAP_APP_PORT || 8080;
    // start server on the specified port locally
    app.listen(port, function() {
      // print a message when the server starts listening
      console.log("To view your app, open this link in your browser: http://localhost:" + port);
    });
  };



  // This function only been used for Two of the Guide
  _ = require("underscore");
  nopt = require("nopt");
  utils = require("./utils");
  server = require("./server");
  exports.main = function() {
    var args, envOptions, optionName, optionRec, options, parsed, shortOptions, _ref;
    options = {
      port: ["p", Number],
      verbose: ["v", Boolean],
      help: ["h", Boolean],
      db: ["d", String]
    };
    shortOptions = {
      "?": ["--help"]
    };
    for (optionName in options) {
      optionRec = options[optionName];
      if (optionRec[0] !== "") {
        shortOptions[optionRec[0]] = ["--" + optionName];
      }
    }
    for (optionName in options) {
      optionRec = options[optionName];
      options[optionName] = optionRec[1];
    }
    parsed = nopt(options, shortOptions, process.argv, 2);
    args = parsed.argv.remain;
    if ((_ref = args[0]) === "?" || _ref === "help") {
      return help();
    }
    if (parsed.help) {
      return help();
    }
    envOptions = {};
    if (process.env.PORT != null) {
      envOptions.port = process.env.PORT;
    }
    options = _.defaults(envOptions, parsed, {
      db: 'cloudant'
    });
    return server.start(options);
  };

  help = function() {
    return console.log("" + utils.PROGRAM + " " + utils.VERSION + "\n\n    " + utils.DESCRIPTION + "\n\nusage: " + utils.PROGRAM + " [options]\n\noptions:\n    -p --port NUMBER     tcp/ip to run server on\n    -v --verbose         be verbose\n    -h --help            print this help\n\nThe port can also be specified by setting the PORT environment variable.");
  };




  if (require.guidePartOne === module) {
    exports.guidePartOne();
  }

  else if(require.main === module) {
    exports.main();
  }


}).call(this);
